/*--------------------------------------------------------------*/
/*--------------------------------------------------------------
3.0 Modules
--------------------------------------------------------------*/
/*
* Usage: https://smacss.com/book/type-module
**/
.extf-tweet {
  margin: 1em 0;
  padding: 0 .5em; }
  .extf-tweet.no-avatar {
    margin-left: -58px; }
  .extf-tweet__meta {
    margin: 0 0 0 58px;
    font-size: 13px; }
  .extf-tweet__content {
    margin: 0 0 0 58px; }
  .extf-tweet__text {
    margin: 0; }
  .extf-tweet__actions {
    border: none;
    margin: 3px 0 3px 52px; }
  .extf-tweet__retweet {
    margin: 3px 0 3px 58px;
    font-size: 13px; }
    .extf-tweet__retweet:before {
      display: inline-block;
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      margin-right: 6px;
      margin-left: -28px;
      padding: 1px 2px;
      border-radius: 3px;
      background: #19cf86;
      color: #fff;
      content: "\f079"; }
    .no-avatar .extf-tweet__retweet:before {
      margin-right: 3px;
      margin-left: 0; }
  .extf-tweet__action {
    padding: 6px;
    -webkit-transition: color .1s;
    transition: color .1s;
    color: #aab8c2;
    font-weight: bold;
    text-decoration: none !important; }
    .extf-tweet__action, .extf-tweet__action:hover, .extf-tweet__action:focus {
      text-decoration: none !important; }
    .extf-tweet__action + .extf-tweet__action {
      margin-left: 10px; }
    .extf-tweet__action--reply:hover, .extf-tweet__action--reply:focus, .extf-tweet__action--reply.active {
      color: #2fc2ef; }
    .extf-tweet__action--retweet:hover, .extf-tweet__action--retweet:focus, .extf-tweet__action--retweet.active {
      color: #19cf86; }
    .extf-tweet__action--like:hover, .extf-tweet__action--like:focus, .extf-tweet__action--like.active {
      color: #e81c4f; }
  .extf-tweet__date {
    white-space: nowrap; }
  .extf-tweet__avatar {
    margin: 3px 6px 0 -58px;
    float: left;
    border-radius: 5px; }
  .extf-tweet__name {
    font-size: 14px;
    font-weight: bold;
    text-decoration: none; }
    .extf-tweet__name:hover {
      text-decoration: none; }
  .extf-tweet__divider {
    height: 1px;
    margin: 0 .5em 1.5em .5em;
    border: 0;
    background-color: #faf5e5; }

/*--------------------------------------------------------------
4.0 Layout
--------------------------------------------------------------*/
/*
* Usage: https://smacss.com/book/type-layout
**/
/*--------------------------------------------------------------
5.0 Misc
--------------------------------------------------------------*/
/*
* Usage: Utility classes that do not fit anywhere in particular into SMACSS (https://smacss.com/book/)
**/
/* Text meant only for screen readers. */
.screen-reader-text {
  position: absolute !important;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px); }
  .screen-reader-text:hover, .screen-reader-text:active, .screen-reader-text:focus {
    font-size: 0.875rem;
    display: block;
    top: 5px;
    left: 5px;
    width: auto;
    height: auto;
    padding: 15px 23px 14px;
    border-radius: 3px;
    font-weight: bold;
    line-height: normal;
    text-decoration: none;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);
    z-index: 100000;
    /* Above WP toolbar. */
    clip: auto !important; }

.clear:before,
.clear:after {
  content: "";
  display: table; }

.clear:after {
  clear: both; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
